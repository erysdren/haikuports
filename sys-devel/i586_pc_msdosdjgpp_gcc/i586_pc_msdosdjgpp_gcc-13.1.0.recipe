SUMMARY="C/C++ cross-compiler for 80386 MS-DOS"
DESCRIPTION="Compiler for 80386 MS-DOS."
HOMEPAGE="http://gcc.gnu.org"
COPYRIGHT="1988-2023 Free Software Foundation, Inc.
	1998-2023 DJ Delorie"
LICENSE="GNU GPL v2
	GNU LGPL v2"
REVISION="1"
SOURCE_URI="http://ftpmirror.gnu.org/gcc/gcc-$portVersion/gcc-$portVersion.tar.xz"
SOURCE_DIR="gcc-$portVersion"
CHECKSUM_SHA256="61d684f0aa5e76ac6585ad8898a2427aade8979ed5e7f85492286c4dfc13ee86"
SOURCE_URI_2="https://www.mirrorservice.org/sites/ftp.delorie.com/pub/djgpp/current/v2/djcrx205.zip
	http://ftp.delorie.com/pub/djgpp/current/v2/djcrx205.zip"
CHECKSUM_SHA256_2="22274ed8d5ee57cf7ccf161f5e1684fd1c0192068724a7d34e1bde168041ca60"

ARCHITECTURES="all !x86_gcc2"
SECONDARY_ARCHITECTURES="x86"

targetArch="i586-pc-msdosdjgpp"
targetU="i586_pc_msdosdjgpp"

PROVIDES="
	${targetU}_gcc$secondaryArchSuffix = $portVersion compat >= 4
	cmd:${targetU}_c++ = $portVersion compat >= 4
	cmd:${targetU}_cc = $portVersion compat >= 4
	cmd:${targetU}_cpp = $portVersion compat >= 4
	cmd:${targetU}_g++ = $portVersion compat >= 4
	cmd:${targetU}_gcc = $portVersion compat >= 4
	cmd:${targetU}_gcc_$portVersion = $portVersion compat >= 4
	cmd:${targetU}_gcov = $portVersion compat >= 4
	lib:${targetU}_libstdc++$secondaryArchSuffix = $portVersion compat >= 4
	"

REQUIRES="
	haiku$secondaryArchSuffix
	cmd:${targetU}_as
	lib:libgmp$secondaryArchSuffix
	lib:libmpfr$secondaryArchSuffix
	lib:libmpc$secondaryArchSuffix
	"
BUILD_REQUIRES="
	cmd:${targetU}_as >= 2.40
	devel:libgmp$secondaryArchSuffix
	devel:libmpfr$secondaryArchSuffix
	devel:libmpc$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:autoconf
	cmd:awk
	cmd:bison
	cmd:find
	cmd:flex
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:makeinfo
	cmd:sed
	cmd:strip
	cmd:tar
	cmd:xargs
	cmd:ar
	cmd:ranlib
	"

sourceDir=$(pwd)
relativeInstallDir="develop/tools/${targetArch}"
installDir="$prefix/$relativeInstallDir"
objectsDir=$(pwd)/../${portVersionedName}-obj

BUILD()
{
	# Touch some files generated by bison, so that bison won't run to update
	# them. Fixes issues with newer bison versions.
	# And while at it, touch gperf target, too (as gperf may not be installed).
	(cd $sourceDir/gcc; touch c-parse.c c-parse.h cexp.c cp/parse.c \
		cp/parse.h c-gperf.h)

	rm -rf $objectsDir
	mkdir -p $objectsDir
	cd $objectsDir

	export DJDIR="$installDir/${targetArch}"

	mkdir -p $includeDir

	### configure #############################################

	DJDIR="$installDir/${targetArch}" \
	CXXFLAGS="-O2 -fPIC" \
	CFLAGS="-O2 -U_FORTIFY_SOURCE -fPIC" \
	LDFLAGS="-lnetwork" \
		runConfigure \
		$sourceDir/configure \
		--build=$effectiveTargetMachineTriple \
		--prefix=$installDir --libexecdir=$installDir/lib --mandir=$manDir \
		--docdir=$docDir --disable-nls --with-gnu-ld \
		--enable-languages=c,c++ --enable-lto \
		--disable-multilib --disable-shared --enable-libstdcxx-filesystem-ts \
		--enable-libquadmath-support --disable-plugin \
		--enable-version-specific-runtime-libs \
		--target=$targetArch --program-prefix=${targetArch}-

	### make ##################################################

	make $jobArgs all-gcc all-target-libgcc
}

INSTALL()
{
	cd $objectsDir

	export DJDIR="$installDir/${targetArch}"

	mkdir -p $includeDir
	DJDIR="$installDir/${targetArch}" \
		make install-gcc install-target-libgcc

	### djcrx #################################################

	mkdir -p $installDir/${targetArch}/sys-include
	mkdir -p $installDir/${targetArch}/lib
	cp -rp $sourceDir2/include $installDir/${targetArch}/sys-include
	cp -rp $sourceDir2/lib/* $installDir/${targetArch}/lib/

	### symlinks ##############################################

	# make all tools available via default paths
	mkdir -p $prefix/bin
	for f in c++ cc cpp g++ gcc gcov; do
		symlinkRelative -sfn $installDir/bin/$targetArch-$f $prefix/bin
	done

	### cleanup ###############################################

	rm -rf $installDir/info
	rm -rf $installDir/share
}
